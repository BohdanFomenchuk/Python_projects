import unittest
from main import *


class TestHammingEncodeDecode(unittest.TestCase):
    def test_encode(self):
        self.assertEqual(hamming_encode("hey"),
                         "000111111000111000000000000111111000000111000111000111111111111000000111")
        self.assertEqual(hamming_encode("The Sensei told me that i can do this kata"),

        self.assertEqual(hamming_encode("T3st"),
                         "000111000111000111000000000000111111000000111111000111111111000000111111000111111111000111000000")
        self.assertEqual(hamming_encode("T?st!%"),
                         "000111000111000111000000000000111111111111111111000111111111000000111111000111111111000111000000000000111000000000000111000000111000000111000111")

    def test_decode(self):
        self.assertEqual(hamming_decode("100111111000111001000010000111111000000111001111000111110110111000010111"),
                         "hey")
        self.assertEqual(hamming_decode("000111000111000111000000000111111000111000000000000111111000000111000111000000111000000000000000000111000111000000111111000111111000000111000111000111111000111111111000000111111111000000111111000111111000000111000111000111111000111000000111000000111000000000000000000111111111000111000000000111111000111111111111000111111000111111000000000111111000000111000000000000111000000000000000000111111000111111000111000111111000000111000111000000111000000000000000000111111111000111000000000111111000111000000000000111111000000000000111000111111111000111000000000000111000000000000000000111111000111000000111000000111000000000000000000111111000000000111111000111111000000000000111000111111000111111111000000000111000000000000000000111111000000111000000000111111000111111111111000000111000000000000000000111111111000111000000000111111000111000000000000111111000111000000111000111111111000000111111000000111000000000000000000111111000111000111111000111111000000000000111000111111111000111000000000111111000000000000111"),
                         "The Sensei told me that i can do this kata")
        self.assertEqual(hamming_decode("000111000111000111000001000000111111000000111111000111111111000000111011000111111111000111000000"),
                         "T3st")
        self.assertEqual(hamming_decode("000111000111000111000010000000111111111111011111000111111111000000111111000111101111000111000000000000111000000000000111000000111000000111000111"),
                         "T?st!%")